{"version":3,"sources":["components/AppBar.js","shared/countries.js","context/actionTypes.js","context/Reducer.js","context/GlobalState.js","constants/constants.js","context/actionCreators.js","components/CustomizationOptions.js","components/Stats.js","components/Chart.js","components/Loader.js","components/Main.js","App.js","index.js"],"names":["useStyles","makeStyles","root","flexGrow","textAlign","ButtonAppBar","classes","AppBar","position","Toolbar","Typography","variant","className","countries","SET_STATS","SET_IS_LOADING","SET_UI_STATE","SET_SELEECTED_COUNTRY","initialState","stats","confirmed","recovered","deaths","isLoading","UIState","showStats","showChart","selectedCountry","Reducer","state","action","type","actionTypes","GlobalContext","createContext","dispatch","GlobalProvider","children","useReducer","Provider","value","apiDomain","setIsLoading","bool","setStats","buttons","marginTop","display","justifyContent","width","formControl","minWidth","selectContainer","alignItems","CustomizationOptions","useContext","useState","checkedA","checkedB","checkBoxState","setCheckBoxState","countryState","setCountryState","handleCheckBoxChange","e","name","target","prevState","useEffect","bool1","bool2","api","a","fetch","res","json","parsedRes","fetchStats","FormGroup","row","FormControlLabel","checked","onChange","control","Checkbox","label","FormControl","InputLabel","id","Select","MenuItem","map","el","cardsRoot","gridRoot","card","minHeight","flexDirection","bullet","margin","transform","subTitle","color","fontWeight","danger","success","infected","Stats","Grid","container","spacing","item","Card","title","displayType","thousandSeparator","gutterBottom","Chart","data","labels","datasets","backgroundColor","borderColor","borderWidth","Loader","style","class","Main","App","ReactDOM","render","document","getElementById"],"mappings":"0NAMMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,EACVC,UAAW,YAIA,SAASC,IACtB,IAAMC,EAAUN,IAEhB,OACE,cAACO,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAWN,EAAQJ,KAA5C,kC,qHCkLOW,EArMG,CAChB,cACA,UACA,UACA,UACA,SACA,sBACA,YACA,UACA,YACA,UACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,SACA,UACA,yBACA,WACA,SACA,SACA,WACA,eACA,QACA,UACA,aACA,WACA,WACA,SACA,2BACA,OACA,QACA,QACA,WACA,UACA,sBACA,mBACA,aACA,gBACA,UACA,OACA,SACA,UACA,UACA,mBACA,WACA,WACA,qBACA,UACA,QACA,cACA,oBACA,UACA,UACA,WACA,WACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,QACA,SACA,UACA,YACA,SACA,gBACA,SACA,QACA,WACA,WACA,UACA,UACA,QACA,YACA,OACA,OACA,UACA,SACA,QACA,UACA,QACA,SACA,aACA,QACA,WACA,eACA,SACA,SACA,aACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,aACA,aACA,SACA,WACA,WACA,OACA,QACA,mBACA,aACA,YACA,SACA,aACA,UACA,SACA,WACA,aACA,UACA,aACA,UACA,QACA,cACA,cACA,YACA,QACA,UACA,kBACA,SACA,OACA,WACA,SACA,mBACA,WACA,OACA,cACA,SACA,WACA,QACA,UACA,SACA,SACA,wBACA,cACA,mCACA,QACA,aACA,wBACA,eACA,UACA,SACA,aACA,eACA,YACA,WACA,WACA,kBACA,UACA,eACA,cACA,QACA,YACA,QACA,uBACA,WACA,SACA,cACA,QACA,UACA,aACA,WACA,WACA,cACA,OACA,sBACA,UACA,SACA,KACA,SACA,UACA,uBACA,iBACA,UACA,aACA,UACA,YACA,UACA,qBA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","file":"static/js/main.8a6edba5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography variant=\"h5\" className={classes.root}>\r\n          Covid-19 Tracker\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","const countries = [\r\n  \"Afghanistan\",\r\n  \"Albania\",\r\n  \"Algeria\",\r\n  \"Andorra\",\r\n  \"Angola\",\r\n  \"Antigua and Barbuda\",\r\n  \"Argentina\",\r\n  \"Armenia\",\r\n  \"Australia\",\r\n  \"Austria\",\r\n  \"Azerbaijan\",\r\n  \"Bahamas\",\r\n  \"Bahrain\",\r\n  \"Bangladesh\",\r\n  \"Barbados\",\r\n  \"Belarus\",\r\n  \"Belgium\",\r\n  \"Belize\",\r\n  \"Benin\",\r\n  \"Bhutan\",\r\n  \"Bolivia\",\r\n  \"Bosnia and Herzegovina\",\r\n  \"Botswana\",\r\n  \"Brazil\",\r\n  \"Brunei\",\r\n  \"Bulgaria\",\r\n  \"Burkina Faso\",\r\n  \"Burma\",\r\n  \"Burundi\",\r\n  \"Cabo Verde\",\r\n  \"Cambodia\",\r\n  \"Cameroon\",\r\n  \"Canada\",\r\n  \"Central African Republic\",\r\n  \"Chad\",\r\n  \"Chile\",\r\n  \"China\",\r\n  \"Colombia\",\r\n  \"Comoros\",\r\n  \"Congo (Brazzaville)\",\r\n  \"Congo (Kinshasa)\",\r\n  \"Costa Rica\",\r\n  \"Cote d'Ivoire\",\r\n  \"Croatia\",\r\n  \"Cuba\",\r\n  \"Cyprus\",\r\n  \"Czechia\",\r\n  \"Denmark\",\r\n  \"Diamond Princess\",\r\n  \"Djibouti\",\r\n  \"Dominica\",\r\n  \"Dominican Republic\",\r\n  \"Ecuador\",\r\n  \"Egypt\",\r\n  \"El Salvador\",\r\n  \"Equatorial Guinea\",\r\n  \"Eritrea\",\r\n  \"Estonia\",\r\n  \"Eswatini\",\r\n  \"Ethiopia\",\r\n  \"Fiji\",\r\n  \"Finland\",\r\n  \"France\",\r\n  \"Gabon\",\r\n  \"Gambia\",\r\n  \"Georgia\",\r\n  \"Germany\",\r\n  \"Ghana\",\r\n  \"Greece\",\r\n  \"Grenada\",\r\n  \"Guatemala\",\r\n  \"Guinea\",\r\n  \"Guinea-Bissau\",\r\n  \"Guyana\",\r\n  \"Haiti\",\r\n  \"Holy See\",\r\n  \"Honduras\",\r\n  \"Hungary\",\r\n  \"Iceland\",\r\n  \"India\",\r\n  \"Indonesia\",\r\n  \"Iran\",\r\n  \"Iraq\",\r\n  \"Ireland\",\r\n  \"Israel\",\r\n  \"Italy\",\r\n  \"Jamaica\",\r\n  \"Japan\",\r\n  \"Jordan\",\r\n  \"Kazakhstan\",\r\n  \"Kenya\",\r\n  \"Kiribati\",\r\n  \"Korea, South\",\r\n  \"Kosovo\",\r\n  \"Kuwait\",\r\n  \"Kyrgyzstan\",\r\n  \"Laos\",\r\n  \"Latvia\",\r\n  \"Lebanon\",\r\n  \"Lesotho\",\r\n  \"Liberia\",\r\n  \"Libya\",\r\n  \"Liechtenstein\",\r\n  \"Lithuania\",\r\n  \"Luxembourg\",\r\n  \"MS Zaandam\",\r\n  \"Madagascar\",\r\n  \"Malawi\",\r\n  \"Malaysia\",\r\n  \"Maldives\",\r\n  \"Mali\",\r\n  \"Malta\",\r\n  \"Marshall Islands\",\r\n  \"Mauritania\",\r\n  \"Mauritius\",\r\n  \"Mexico\",\r\n  \"Micronesia\",\r\n  \"Moldova\",\r\n  \"Monaco\",\r\n  \"Mongolia\",\r\n  \"Montenegro\",\r\n  \"Morocco\",\r\n  \"Mozambique\",\r\n  \"Namibia\",\r\n  \"Nepal\",\r\n  \"Netherlands\",\r\n  \"New Zealand\",\r\n  \"Nicaragua\",\r\n  \"Niger\",\r\n  \"Nigeria\",\r\n  \"North Macedonia\",\r\n  \"Norway\",\r\n  \"Oman\",\r\n  \"Pakistan\",\r\n  \"Panama\",\r\n  \"Papua New Guinea\",\r\n  \"Paraguay\",\r\n  \"Peru\",\r\n  \"Philippines\",\r\n  \"Poland\",\r\n  \"Portugal\",\r\n  \"Qatar\",\r\n  \"Romania\",\r\n  \"Russia\",\r\n  \"Rwanda\",\r\n  \"Saint Kitts and Nevis\",\r\n  \"Saint Lucia\",\r\n  \"Saint Vincent and the Grenadines\",\r\n  \"Samoa\",\r\n  \"San Marino\",\r\n  \"Sao Tome and Principe\",\r\n  \"Saudi Arabia\",\r\n  \"Senegal\",\r\n  \"Serbia\",\r\n  \"Seychelles\",\r\n  \"Sierra Leone\",\r\n  \"Singapore\",\r\n  \"Slovakia\",\r\n  \"Slovenia\",\r\n  \"Solomon Islands\",\r\n  \"Somalia\",\r\n  \"South Africa\",\r\n  \"South Sudan\",\r\n  \"Spain\",\r\n  \"Sri Lanka\",\r\n  \"Sudan\",\r\n  \"Summer Olympics 2020\",\r\n  \"Suriname\",\r\n  \"Sweden\",\r\n  \"Switzerland\",\r\n  \"Syria\",\r\n  \"Taiwan*\",\r\n  \"Tajikistan\",\r\n  \"Tanzania\",\r\n  \"Thailand\",\r\n  \"Timor-Leste\",\r\n  \"Togo\",\r\n  \"Trinidad and Tobago\",\r\n  \"Tunisia\",\r\n  \"Turkey\",\r\n  \"US\",\r\n  \"Uganda\",\r\n  \"Ukraine\",\r\n  \"United Arab Emirates\",\r\n  \"United Kingdom\",\r\n  \"Uruguay\",\r\n  \"Uzbekistan\",\r\n  \"Vanuatu\",\r\n  \"Venezuela\",\r\n  \"Vietnam\",\r\n  \"West Bank and Gaza\",\r\n  \"Yemen\",\r\n  \"Zambia\",\r\n  \"Zimbabwe\",\r\n];\r\n\r\nexport default countries;\r\n","export const SET_STATS = \"SET_STATS\";\r\nexport const SET_IS_LOADING = \"SET_IS_LOADING\";\r\nexport const SET_UI_STATE = \"SET_UI_STATE\";\r\nexport const SET_SELEECTED_COUNTRY = \"SET_SELEECTED_COUNTRY\";\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const initialState = {\r\n  stats: { confirmed: 0, recovered: 0, deaths: 0 },\r\n  isLoading: true,\r\n  UIState: { showStats: true, showChart: true },\r\n  selectedCountry: \"global\",\r\n};\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_STATS:\r\n      return { ...state, stats: { ...action.stats } };\r\n    case actionTypes.SET_IS_LOADING:\r\n      return { ...state, isLoading: action.isLoading };\r\n    case actionTypes.SET_UI_STATE:\r\n      return {\r\n        ...state,\r\n        UIState: { showStats: action.showStats, showChart: action.showChart },\r\n      };\r\n    case actionTypes.SET_SELEECTED_COUNTRY:\r\n      return { ...state, selectedCountry: action.selectedCountry };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default Reducer;\r\n","import React, { createContext, useReducer } from \"react\";\r\n\r\nimport Reducer, { initialState } from \"./Reducer\";\r\n\r\nexport const GlobalContext = createContext({\r\n  state: initialState,\r\n  dispatch: () => {},\r\n});\r\n\r\nconst GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(Reducer, initialState);\r\n  return (\r\n    <GlobalContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GlobalProvider;\r\n","export const apiDomain = \"https://covid19.mathdro.id/api\";\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const setUIState = (bool1, bool2) => {\r\n  return { type: actionTypes.SET_UI_STATE, showStats: bool1, showChart: bool2 };\r\n};\r\n\r\nexport const setIsLoading = (bool) => {\r\n  return { type: actionTypes.SET_IS_LOADING, isLoading: bool };\r\n};\r\n\r\nexport const setSelectedCountry = (country) => {\r\n  return { type: actionTypes.SET_SELEECTED_COUNTRY, selectedCountry: country };\r\n};\r\n\r\nexport const setStats = (stats) => {\r\n  return { type: actionTypes.SET_STATS, stats };\r\n};\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport countries from \"../shared/countries\";\r\n\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { apiDomain } from \"../constants/constants\";\r\nimport { setUIState, setStats, setIsLoading } from \"../context/actionCreators\";\r\n\r\nconst useStyles = makeStyles({\r\n  buttons: {\r\n    marginTop: \"1rem\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  formControl: {\r\n    minWidth: 120,\r\n  },\r\n  selectContainer: {\r\n    marginTop: \"1.5rem\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nconst CustomizationOptions = () => {\r\n  const classes = useStyles();\r\n  const {\r\n    state: { UIState, selectedCountry },\r\n    dispatch,\r\n  } = useContext(GlobalContext);\r\n  const [checkBoxState, setCheckBoxState] = useState({\r\n    checkedA: UIState.showStats,\r\n    checkedB: UIState.showChart,\r\n  });\r\n\r\n  const [countryState, setCountryState] = useState(selectedCountry);\r\n\r\n  const handleCheckBoxChange = (e) => {\r\n    const { name } = e.target;\r\n\r\n    setCheckBoxState((prevState) => ({\r\n      ...prevState,\r\n      [name]: !prevState[name],\r\n    }));\r\n  };\r\n\r\n  const handleSelectChange = (e) => {\r\n    const { value } = e.target;\r\n\r\n    setCountryState(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(setUIState(checkBoxState.checkedA, checkBoxState.checkedB));\r\n  }, [checkBoxState, dispatch]);\r\n\r\n  useEffect(() => {\r\n    let api = apiDomain;\r\n\r\n    if (countryState !== \"global\") {\r\n      api = apiDomain + \"/countries/\" + countryState;\r\n    }\r\n    const fetchStats = async () => {\r\n      dispatch(setIsLoading(true));\r\n      const res = await fetch(api);\r\n      const parsedRes = await res.json();\r\n      dispatch(setIsLoading(false));\r\n\r\n      const stats = {\r\n        confirmed: parsedRes.confirmed.value,\r\n        deaths: parsedRes.deaths.value,\r\n        recovered: parsedRes.recovered.value,\r\n      };\r\n\r\n      dispatch(setStats(stats));\r\n    };\r\n\r\n    fetchStats();\r\n  }, [countryState, dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <FormGroup row className={classes.buttons}>\r\n        <FormControlLabel\r\n          checked={checkBoxState.checkedA}\r\n          onChange={handleCheckBoxChange}\r\n          control={<Checkbox name=\"checkedA\" />}\r\n          label=\"Show stats\"\r\n        />\r\n        <FormControlLabel\r\n          checked={checkBoxState.checkedB}\r\n          onChange={handleCheckBoxChange}\r\n          control={<Checkbox name=\"checkedB\" />}\r\n          label=\"Show chart\"\r\n        />\r\n      </FormGroup>\r\n      <div className={classes.selectContainer}>\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel id=\"demo-simple-select-outlined-label\">\r\n            Country\r\n          </InputLabel>\r\n          <Select\r\n            name=\"country\"\r\n            value={countryState}\r\n            onChange={handleSelectChange}\r\n            label=\"Country\"\r\n          >\r\n            <MenuItem value=\"global\">Global</MenuItem>\r\n            {countries.map((el) => {\r\n              return (\r\n                <MenuItem key={el} value={el}>\r\n                  {el}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomizationOptions;\r\n","import React, { useContext } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst useStyles = makeStyles({\r\n  cardsRoot: {\r\n    marginTop: \"2rem\",\r\n    flexGrow: 1,\r\n  },\r\n  gridRoot: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  card: {\r\n    minWidth: 275,\r\n    minHeight: 200,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  subTitle: {\r\n    color: \"#a7a7a7\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  danger: {\r\n    color: \"#b2102f\",\r\n  },\r\n  success: {\r\n    color: \"#00a152\",\r\n  },\r\n  infected: {\r\n    color: \"#4615b2\",\r\n  },\r\n});\r\n\r\nconst Stats = () => {\r\n  const {\r\n    state: { stats },\r\n  } = useContext(GlobalContext);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.cardsRoot}>\r\n      <Grid container spacing={3} className={classes.gridRoot}>\r\n        <Grid item>\r\n          <Card className={classes.card}>\r\n            <Typography\r\n              className={`${classes.title} ${classes.danger}`}\r\n              variant=\"h5\"\r\n            >\r\n              <NumberFormat\r\n                value={stats.deaths}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n              />\r\n            </Typography>\r\n            <Typography\r\n              className={classes.subTitle}\r\n              variant=\"button\"\r\n              display=\"block\"\r\n              gutterBottom\r\n            >\r\n              deaths\r\n            </Typography>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item>\r\n          <Card className={classes.card}>\r\n            <Typography\r\n              className={`${classes.title} ${classes.success}`}\r\n              variant=\"h5\"\r\n            >\r\n              <NumberFormat\r\n                value={stats.recovered}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n              />\r\n            </Typography>\r\n            <Typography\r\n              className={classes.subTitle}\r\n              variant=\"button\"\r\n              display=\"block\"\r\n              gutterBottom\r\n            >\r\n              recovered\r\n            </Typography>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item>\r\n          <Card className={classes.card}>\r\n            <Typography\r\n              className={`${classes.title} ${classes.infected}`}\r\n              variant=\"h5\"\r\n            >\r\n              <NumberFormat\r\n                value={stats.confirmed}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n              />\r\n            </Typography>\r\n            <Typography\r\n              className={classes.subTitle}\r\n              variant=\"button\"\r\n              display=\"block\"\r\n              gutterBottom\r\n            >\r\n              confirmed\r\n            </Typography>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React, { useContext } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Chart = () => {\r\n  const {\r\n    state: { stats },\r\n  } = useContext(GlobalContext);\r\n\r\n  const data = {\r\n    labels: [\"Deaths\", \"Recovered\", \"Confirmed\"],\r\n    datasets: [\r\n      {\r\n        label: \"# of Votes\",\r\n        data: [stats.deaths, stats.recovered, stats.confirmed],\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.2)\",\r\n          \"rgba(75, 192, 192, 0.2)\",\r\n          \"rgba(153, 102, 255, 0.2)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div className=\"ChartContainer\">\r\n      <div className=\"Header\">{/* <h1>Doughnut Chart</h1> */}</div>\r\n      <Doughnut data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"6rem\" }}>\r\n      <div class=\"loadingio-spinner-double-ring-6ta48ekvl9\">\r\n        <div class=\"ldio-bexpi30w4si\">\r\n          <div></div>\r\n          <div></div>\r\n          <div>\r\n            <div></div>\r\n          </div>\r\n          <div>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport CustomizationOptions from \"./CustomizationOptions\";\r\nimport Stats from \"./Stats\";\r\nimport Chart from \"./Chart\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Main = () => {\r\n  const {\r\n    state: {\r\n      isLoading,\r\n      UIState: { showStats, showChart },\r\n    },\r\n  } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <>\r\n      <CustomizationOptions />\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {showStats && <Stats />}\r\n          {showChart && <Chart />}\r\n        </>\r\n      )}{\" \"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import \"./App.css\";\nimport AppBar from \"./components/AppBar\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppBar />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport GlobalContext from \"./context/GlobalState\";\n\nReactDOM.render(\n  <GlobalContext>\n    <App />\n  </GlobalContext>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}